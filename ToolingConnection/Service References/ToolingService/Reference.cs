//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolingConnection.ToolingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TickTimings", Namespace="http://schemas.datacontract.org/2004/07/ToolingService")]
    [System.SerializableAttribute()]
    public partial class TickTimings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ToolingConnection.ToolingService.ProcessTiming> ProcessTimingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint TotalDurationNanosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phase {
            get {
                return this.PhaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PhaseField, value) != true)) {
                    this.PhaseField = value;
                    this.RaisePropertyChanged("Phase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ToolingConnection.ToolingService.ProcessTiming> ProcessTimings {
            get {
                return this.ProcessTimingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessTimingsField, value) != true)) {
                    this.ProcessTimingsField = value;
                    this.RaisePropertyChanged("ProcessTimings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Step {
            get {
                return this.StepField;
            }
            set {
                if ((this.StepField.Equals(value) != true)) {
                    this.StepField = value;
                    this.RaisePropertyChanged("Step");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint TotalDurationNanos {
            get {
                return this.TotalDurationNanosField;
            }
            set {
                if ((this.TotalDurationNanosField.Equals(value) != true)) {
                    this.TotalDurationNanosField = value;
                    this.RaisePropertyChanged("TotalDurationNanos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessTiming", Namespace="http://schemas.datacontract.org/2004/07/ToolingService")]
    [System.SerializableAttribute()]
    public partial class ProcessTiming : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint DurationNanosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint DurationNanos {
            get {
                return this.DurationNanosField;
            }
            set {
                if ((this.DurationNanosField.Equals(value) != true)) {
                    this.DurationNanosField = value;
                    this.RaisePropertyChanged("DurationNanos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToolingService.IMetricsPublishService")]
    public interface IMetricsPublishService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMetricsPublishService/PostTick")]
        void PostTick(ToolingConnection.ToolingService.TickTimings tick);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetricsPublishServiceChannel : ToolingConnection.ToolingService.IMetricsPublishService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetricsPublishServiceClient : System.ServiceModel.ClientBase<ToolingConnection.ToolingService.IMetricsPublishService>, ToolingConnection.ToolingService.IMetricsPublishService {
        
        public MetricsPublishServiceClient() {
        }
        
        public MetricsPublishServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetricsPublishServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetricsPublishServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetricsPublishServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PostTick(ToolingConnection.ToolingService.TickTimings tick) {
            base.Channel.PostTick(tick);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToolingService.IMetricsSubscribeService", CallbackContract=typeof(ToolingConnection.ToolingService.IMetricsSubscribeServiceCallback))]
    public interface IMetricsSubscribeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetricsSubscribeService/Subscribe", ReplyAction="http://tempuri.org/IMetricsSubscribeService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetricsSubscribeService/Unsubscribe", ReplyAction="http://tempuri.org/IMetricsSubscribeService/UnsubscribeResponse")]
        void Unsubscribe();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetricsSubscribeServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMetricsSubscribeService/OnTick")]
        void OnTick(ToolingConnection.ToolingService.TickTimings tick);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetricsSubscribeServiceChannel : ToolingConnection.ToolingService.IMetricsSubscribeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetricsSubscribeServiceClient : System.ServiceModel.DuplexClientBase<ToolingConnection.ToolingService.IMetricsSubscribeService>, ToolingConnection.ToolingService.IMetricsSubscribeService {
        
        public MetricsSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MetricsSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MetricsSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MetricsSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MetricsSubscribeServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
    }
}
